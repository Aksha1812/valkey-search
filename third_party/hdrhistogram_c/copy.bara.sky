load("//devtools/copybara/library/workflow", "exclude_paths", "git_to_third_party")

git_to_third_party(
    url = "https://github.com/HdrHistogram/HdrHistogram_c",
    git_files = exclude_paths([".gitignore", "ide/**", "appveyor.yml"]),
    google3_path = "third_party/hdrhistogram_c",
    transformations = [
        core.replace(
            before = "file_name = \"histogram",
            after = "file_name = \"/tmp/histogram",
            paths = glob(["test/hdr_histogram_log_test.c"]),
        ),
        core.replace(
            before = "_log = \"jHiccup",
            after = "_log = \"third_party/hdrhistogram_c/test/jHiccup",
            paths = glob(["test/hdr_histogram_log_test.c"]),
        ),
        # TODO(htuch): Remove this when we pick up https://github.com/HdrHistogram/HdrHistogram_c/pull/71
        core.replace(
            before = "mu_run_test(test_bounds_check_on_decode",
            after = "//mu_run_test(test_bounds_check_on_decode",
            paths = glob(["test/hdr_histogram_log_test.c"]),
        ),
        # TODO(htuch): Remove this when we pick up https://github.com/HdrHistogram/HdrHistogram_c/pull/71
        core.replace(
            before = "mu_assert(\"Should have been reset\"${rest}",
            after = "mu_assert(\"Should have been reset\"${rest}; return 0;\n",
            regex_groups = {"rest": ".*"},
            paths = glob(["test/hdr_histogram_test.c"]),
        ),
        core.move("LICENSE.txt", "LICENSE")
    ],
)
